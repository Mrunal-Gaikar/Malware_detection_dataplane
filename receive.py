#!/usr/bin/env python3
import sys
import struct
import os
from scapy.all import *
from scapy.all import sniff, sendp, hexdump, get_if_list, get_if_hwaddr, bind_layers
from scapy.all import Packet, IPOption, Ether, IP, raw,UDP
from scapy.all import ShortField, IntField, LongField, BitField, FieldListField, FieldLenField
from scapy.layers.inet import _IPOption_HDR


class CpuHeader(Packet):
    name = 'CpuPacket'
    fields_desc = [BitField("device_id",0,16), BitField('reason',0,16), BitField('counter', 0, 80)]



#bind_layers(CpuHeader, Ether,TCP)

def handle_pkt(pkt):
    
    f = open("packetsreceived.txt",'a') 
    
    
    pay=str(pkt.payload)
    if(pay[len(pay)-2]=="1"):
        print("Controller got a malicious packet!\n")
        f.write("Controller got malicious packet=")
        f.write(pay[len(pay)-2])
          
    else:
        print("Controller got a benign packet!\n")
        f.write("Controller got benign packet=")
        f.write(pay[len(pay)-2])
           
    f.write("\n") 
    
    cpu_header = CpuHeader(raw(pkt))
    cpu_header.show()
    sys.stdout.flush()
    
"""
    cpu_header = CpuHeader(raw(pkt))
    tcp_header = tcp(raw(pkt))

    if cpu_header.reason == 200:
        cpu_header.show()
        tcp_header.show()
"""
   

def main():
   
    if len(sys.argv) < 2:
        iface = 's1-cpu-eth1'
    else:
        iface = sys.argv[1]
	
    print("sniffing on %s" % iface)
    sys.stdout.flush()  
	
    sniff(filter="tcp",iface = iface,prn = lambda x: handle_pkt(x))
    



if __name__ == '__main__':
    main()
